...

    for (size_t Pos=0; Pos<List.size(); Pos++) {
        //Files_Count+=MI.Menu_File_Open_Files_Continue(List[Pos]);

        size_t len = 5242880; //str.max_size(); //str.size();

        char* cstr = new char[1048576];
        wcstombs(cstr, List[Pos].c_str(), len);

        //From: preparing an example file for reading
        FILE* F = fopen(cstr, "rb"); //You can use something else than a file

        size_t buffsize = 1024 * 1024; //7 * 188;
        //From: preparing a memory buffer for reading
        unsigned char* From_Buffer = new unsigned char[buffsize]; //Note: you can do your own buffer
        size_t From_Buffer_Size; //The size of the read file buffer

        //From: retrieving file size
        fseek(F, 0, SEEK_END);
        long F_Size = ftell(F);
        fseek(F, 0, SEEK_SET);

        //Initializing MediaInfo
        MediaInfo MII;
        //Preparing to fill MediaInfo with a buffer
        MII.Open_Buffer_Init(F_Size, 0);
        //The parsing loop

        do {
            //Reading data somewhere, do what you want for this.
            From_Buffer_Size = fread(From_Buffer, 1, buffsize, F);
            //Sending the buffer to MediaInfo
            size_t Status = MII.Open_Buffer_Continue(From_Buffer,
                    From_Buffer_Size);

            if (Status & 0x08) //Bit3=Finished
                break;

            //Testing if there is a MediaInfo request to go elsewhere
            if (MII.Open_Buffer_Continue_GoTo_Get() != (MediaInfo_int64u) - 1) {
                fseek(F, (long) MII.Open_Buffer_Continue_GoTo_Get(), SEEK_SET); //Position the file
                MII.Open_Buffer_Init(F_Size, ftell(F)); //Informing MediaInfo we have seek
            }
        } while (From_Buffer_Size > 0);

        //Finalizing
        MII.Open_Buffer_Finalize(); //This is the end of the stream, MediaInfo must finnish some work

        fclose(F);

        Files_Count += 1;

        MII.Option(__T("Complete"));
        STRINGOUT(MII.Inform());
        LogFile_Action(MII.Inform());
    }

    ////Output
    //STRINGOUT(MI.Inform_Get());

    ////Output, in a file if needed
    //LogFile_Action(MI.Inform_Get());

...